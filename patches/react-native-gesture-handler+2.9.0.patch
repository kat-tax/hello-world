diff --git a/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.js b/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.js
index d773992..150409e 100644
--- a/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.js
+++ b/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.js
@@ -1,7 +1,7 @@
 function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 
 import * as React from 'react';
-import { DrawerLayoutAndroid as RNDrawerLayoutAndroid, FlatList as RNFlatList, Switch as RNSwitch, TextInput as RNTextInput, ScrollView as RNScrollView, View } from 'react-native';
+import { FlatList as RNFlatList, Switch as RNSwitch, TextInput as RNTextInput, ScrollView as RNScrollView, View } from 'react-native';
 import createNativeWrapper from '../handlers/createNativeWrapper';
 export const ScrollView = createNativeWrapper(RNScrollView, {
   disallowInterruption: false
@@ -12,11 +12,11 @@ export const Switch = createNativeWrapper(RNSwitch, {
   disallowInterruption: true
 });
 export const TextInput = createNativeWrapper(RNTextInput);
-export const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {
+export const DrawerLayoutAndroid = createNativeWrapper(View, {
   disallowInterruption: true
 }); // @ts-ignore -- TODO(TS) to investigate if it's needed
 
-DrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions; // RefreshControl is implemented as a functional component, rendering a View
+DrawerLayoutAndroid.positions = View.positions; // RefreshControl is implemented as a functional component, rendering a View
 // NativeViewGestureHandler needs to set a ref on its child, which cannot be done
 // on functional components
 
